// Generated by CoffeeScript 1.3.3
(function() {
  var Block, BlockView,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Block = (function(_super) {

    __extends(Block, _super);

    function Block() {
      return Block.__super__.constructor.apply(this, arguments);
    }

    Block.prototype.initialize = function() {
      return console.log("Block.initialize");
    };

    return Block;

  })(Backbone.Model);

  BlockView = (function(_super) {

    __extends(BlockView, _super);

    function BlockView() {
      return BlockView.__super__.constructor.apply(this, arguments);
    }

    BlockView.prototype.className = "block";

    BlockView.prototype.initialize = function() {
      return console.log("BlockView.initialize");
    };

    BlockView.prototype.events = {
      "click": "click"
    };

    BlockView.prototype.click = function() {
      return console.log("BlockView.click");
    };

    BlockView.prototype.render = function() {
      var date, title;
      title = this.model.get('content').get('title');
      date = this.model.get('content').niceDate();
      this.$el.html("<div class=\"inner\">\n	<div class=\"label\">\n		<div class=\"date\">" + date + "</div>\n		<h2>" + title + "</h2>\n	</div>\n</div>");
      return this;
    };

    return BlockView;

  })(Backbone.View);

  window.Block = Block;

  window.BlockView = BlockView;

}).call(this);
